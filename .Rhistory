install.packages("slidify")
source("httcp://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
install.packages("ggplot2")
find.package("devtools")
installed.packages("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
f <- function(x){
g <- function(y) {
y + z
}
z <- 4
x+g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data("iris")
?iris
mean.Sepal.length(virginica)
mean(sepal.lengthÂ§virginica)
mean(sepal.length)
mean(Sepal.Length(virginica))
mean(iris[iris$Species == "virginica",]$Sepal.Length)
data("mtcars")
?mtcars
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b"
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687"
)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
ouath_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httr)
> oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
app <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), app)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "4b6c564fec1bea0dba29",
secret = "3425cfc0a4a05b9b01195992d21ddfb038606b71")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
library(sqldf)
library("sqldf")
install(sqldf)
install.packages("sqldf")
install.packages("RSQLite")
install.packages("tcltk2")
libarry(sqldf)
library(sqldf)
acs <- read.cs("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", header=T, sep=",")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", header=T, sep=",")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf(unique(acs$AGEP))
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <-readlines(con)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
hurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
con <- url(hurl)
code <- readLines(con)
close(con)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fileurl1 = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
dst1 = 'C:\\Users\user\\Dropbox\\Coursera\\Quiz3'
download.file(fileurl1, dst1, method = 'curl')
data1 = read.csv(dst1)
agricultureLogical = data1$ACR == 3 & data1$AGS == 6
head(which(agricultureLogical), 3)
fileurl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dst1 = "C:\\Users\user\\Dropbox\\Coursera\\Quiz3"
fileurl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dst1 = "C:\\Users\\user\\Dropbox\\Coursera\\Quiz3"
download.file(fileurl1, dst1, method = 'curl')
fileurl1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl1, dst1, method = 'curl')
download.file(fileurl1, dst1, method = 'curl')
library(jpeg)
library(data.table)
library(dplyr)
fileurl1 = 'http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
dst1 = "C:\\Users\\user\\Dropbox\\Coursera"
download.file(fileurl1, dst1, method = 'curl')
data1 = read.csv(dst1)
agricultureLogical = data1$ACR == 3 & data1$AGS == 6
head(which(agricultureLogical), 3)
download.file(fileurl1, dst1, method = 'curl')
> download.file(fileurl1, dst1, method = 'auto')
download.file(fileurl1, dst1, method = 'auto')
dst1 = "C:\\Users\\user\\Dropbox\\Coursera\\try.csv"
download.file(fileurl1, dst1, method = 'curl')
data <- read.csv(dst1, header = T)
agricultureLogical <- with(data, ACR == 3 & AGS == 6)
which(agricultureLogical)[1:3]
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
install.packages("shiny")
> x <- rnorm(100)
> hist(x)
x <- rnorm(100)
hist(x)
hist(x)
plots(w , y, pch = 20)
y <- rnorm(100)
plot(x,y)
dev.cur()
swirl()
library("swirl")
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date(1969-01-01)
d2 <- as.Date("1996-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
swirl()
swirl()
library(swirl)
library("swirl")
swirl()
swirl()
install.packages("swirl")
library("swirl")
install_course("R Programming E")
install_course("Data Analysis")
install_course("Data Analysis")
install_course("Open Intro")
library("swirl")
install_course("Getting and Cleaning Data")
install_course("Data Analysis")
library("plyr")
library("knitr")
library("reshape2")
library("ggplot2")
setwd(C:\Users\user\Dropbox\Coursera\RepData_PeerAssessment1)
setwd(C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1)
setwd("C:\Users\user\Dropbox\Coursera\RepData_PeerAssessment1")
setwd("setwd(C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1)")
setwd(C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1)
setwd("C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1")
if(!file.exists("./data/activity.csv")){
unzip(zipfile = "./data/Data.zip",exdir = "./data")
}
if(!file.exists("./data/activity.csv")){
unzip(zipfile = "./data/Data.zip",exdir = "./data")
}
if(!file.exists("./data/Data.")){
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url = fileUrl,destfile = "./data/Data.zip",method = "curl")
}
##unzip the file
if(!file.exists("./data/activity.csv")){
unzip(zipfile = "./data/Data.zip",exdir = "./data")
}
if(!file.exists("./data/Data.")){
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url = fileUrl,destfile = "./data/Data.zip",method = "curl")
}
if(!file.exists("./data/activity.csv")){
unzip(zipfile = "./data/Data.zip",exdir = "./data")
}
if(!file.exists("./data/Data.")){
fileUrl <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url = fileUrl,destfile = "./data/Data.zip",method = "curl")
}
if(!file.exists("./data/activity.csv")){
unzip(zipfile = "./data/Data.zip",exdir = "./data")
}
path <- "./data/activity.csv"
data = read.table(file = path, header = T, quote = "\", sep = ","")
data$date <- as.Date(data$date)
path <- "./data/activity.csv"
data = read.table(file = path, header = T, quote = "\", sep = ","")
path <- "C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1//data//activity.csv"
data = read.table(file = path, header = T, quote = "\", sep = ","")
data$date <- as.Date(data$date)
path <- "C://Users//user//Dropbox//Coursera//RepData_PeerAssessment1//data//activity.csv"
data = read.csv(file = path, header = T, quote = "\", sep = ","")
data$date <- as.Date(data$date)
data$date <- as.Date(data$date, "%y-%m-%d")
